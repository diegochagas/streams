{"version":3,"sources":["components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","actions/types.js","components/GoogleAuth.js","actions/index.js","components/Header.js","reducers/authReducer.js","reducers/index.js","App.js","index.js","logo.svg"],"names":["StreamCreate","props","renderInput","bind","className","onSubmit","this","handleSubmit","Field","name","component","label","input","meta","error","touched","autoComplete","renderError","formValues","console","log","React","Component","reduxForm","form","validate","errors","title","description","StreamEdit","StreamDelete","StreamList","StreamShow","types","SIGN_IN","SIGN_OUT","GoogleAuth","onAuthChange","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","isSignedIn","get","listen","renderAuthButton","onClick","signIn","currentUser","getId","signOut","connect","state","userId","type","payload","Header","to","src","logo","alt","INITIAL_STATE","combineReducers","action","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","App","path","exact","exac","ReactDOM","render","document","getElementById","module","exports"],"mappings":"iUAGMA,E,YACF,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFL,E,sEAMd,OACI,0BACIC,UAAU,8BACVC,SAAUC,KAAKL,MAAMM,aAAaD,KAAKD,WAEvC,kBAACG,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWJ,KAAKJ,YAAaS,MAAM,UACvD,kBAACH,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWJ,KAAKJ,YAAaS,MAAM,sBAC7D,4BAAQP,UAAU,qBAAlB,a,qCAKyB,IAAvBQ,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,MAAOE,EAAQ,EAARA,KAClBT,EAAS,gBAAYS,EAAKC,OAASD,EAAKE,QAAU,QAAS,IACjE,OACI,yBAAKX,UAAWA,GACZ,+BAAQO,GACR,2CAAYC,EAAZ,CAAoBI,aAAa,SAChCV,KAAKW,YAAYJ,M,qCAKI,IAApBC,EAAmB,EAAnBA,MACV,GAD6B,EAAZC,SACFD,EACX,OACI,yBAAKV,UAAU,oBACX,yBAAKA,UAAU,UAAUU,M,+BAMhCI,GACLC,QAAQC,IAAIF,O,GAzCOG,IAAMC,WAwDlBC,cAAU,CAAEC,KAAM,eAAgBC,SAXhC,SAAAP,GACb,IAAMQ,EAAS,GAOf,OANKR,EAAWS,QACZD,EAAOC,MAAQ,0BAEdT,EAAWU,cACZF,EAAOE,YAAc,gCAElBF,IAGIH,CAA8CvB,GCrD9C6B,EAJI,WACf,OAAO,4CCGIC,EAJM,WACjB,OAAO,8CCGIC,EAJI,WACf,OAAO,4CCGIC,EAJI,WACf,OAAO,4C,0BCEIC,EALD,CACVC,QAAS,UACTC,SAAU,YCERC,E,YACF,WAAYnC,GAAO,IAAD,8BACd,4CAAMA,KACDoC,aAAe,EAAKA,aAAalC,KAAlB,gBACpB,EAAKmC,cAAgB,EAAKA,cAAcnC,KAAnB,gBACrB,EAAKoC,eAAiB,EAAKA,eAAepC,KAApB,gBAJR,E,iFAOG,IAAD,OAChBqC,OAAOC,KAAKC,KAAK,gBAAgB,WAC7BF,OAAOC,KAAKE,OAAOC,KAAK,CACpBC,SAAU,2EACVC,MAAO,UACRC,MAAK,WACJ,EAAKC,KAAOR,OAAOC,KAAKQ,MAAMC,kBAC9B,EAAKb,aAAa,EAAKW,KAAKG,WAAWC,OACvC,EAAKJ,KAAKG,WAAWE,OAAO,EAAKhB,sB,+BAMzC,OACI,yBAAKjC,UAAU,eACVE,KAAKgD,sB,yCAMd,OAA8B,OAA1BhD,KAAKL,MAAMkD,WACJ,KACA7C,KAAKL,MAAMkD,WAEd,4BAAQ/C,UAAU,uBAAuBmD,QAASjD,KAAKiC,gBACnD,uBAAGnC,UAAU,gBACb,2CAKJ,4BAAQA,UAAU,uBAAuBmD,QAASjD,KAAKgC,eACnD,uBAAGlC,UAAU,gBACb,wD,mCAMH+C,GACLA,EACA7C,KAAKL,MAAMuD,OAAOlD,KAAK0C,KAAKS,YAAYL,MAAMM,SAE9CpD,KAAKL,MAAM0D,Y,sCAKfrD,KAAK0C,KAAKQ,W,uCAIVlD,KAAK0C,KAAKW,c,GA9DOrC,aAsEVsC,eAJS,SAAAC,GACpB,MAAO,CAAEV,WAAYU,EAAMb,KAAKG,cAGI,CAAEK,OCxEpB,SAAAM,GAClB,MAAO,CACHC,KAAM9B,EAAMC,QACZ8B,QAASF,IDqEiCH,QCjE3B,WACnB,MAAO,CACHI,KAAM9B,EAAME,YD+DLyB,CAA8CxB,GEnD9C6B,EAjBA,WACX,OACI,4BAAQ7D,UAAU,mBACd,kBAAC,IAAD,CAAM8D,GAAG,IAAI9D,UAAU,YACnB,gCACI,yBAAK+D,IAAKC,IAAMhE,UAAU,WAAWiE,IAAI,SACzC,gDAGR,kBAAC,IAAD,CAAMH,GAAG,IAAI9D,UAAU,YAAvB,eAGA,kBAAC,EAAD,Q,iBChBNkE,EAAgB,CAClBnB,WAAY,KACZW,OAAQ,MCAGS,cAAgB,CAC3BvB,KDEW,WAAoC,IAAnCa,EAAkC,uDAA1BS,EAAeE,EAAW,uCAC9C,OAAQA,EAAOT,MACX,KAAK9B,EAAMC,QACP,OAAO,eAAK2B,EAAZ,CAAmBV,YAAY,EAAMW,OAAQU,EAAOR,UACxD,KAAK/B,EAAME,SACP,OAAO,eAAK0B,EAAZ,CAAmBV,YAAY,EAAOW,OAAQ,OAClD,QACI,OAAOD,ICRfrC,KAAMiD,MCOJC,EAAmBlC,OAAOmC,sCAAwCC,IAClEC,EAAQC,YAAYC,EAAUL,EAAiBM,gBAqBtCC,MAnBf,WACE,OACI,kBAAC,IAAD,CAAUJ,MAAOA,GACX,yBAAKzE,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAO8E,KAAK,IAAIC,OAAK,EAACzE,UAAWqB,IACjC,kBAAC,IAAD,CAAOmD,KAAK,eAAeC,OAAK,EAACzE,UAAWV,IAC5C,kBAAC,IAAD,CAAOkF,KAAK,gBAAgBC,OAAK,EAACzE,UAAWmB,IAC7C,kBAAC,IAAD,CAAOqD,KAAK,kBAAkBC,OAAK,EAACzE,UAAWoB,IAC/C,kBAAC,IAAD,CAAOoD,KAAK,gBAAgBE,MAAI,EAAC1E,UAAWsB,SCtBpEqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCLjDC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.8fb08bf1.chunk.js","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n    constructor(props){\n        super(props);\n        this.renderInput = this.renderInput.bind(this);\n    }\n\n    render() {\n        return (\n            <form \n                className=\"stream-create ui form error\" \n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n            >\n                <Field name=\"title\" component={this.renderInput} label=\"Title\" />\n                <Field name=\"description\" component={this.renderInput} label=\"Enter description\" />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n    \n    renderInput({ input, label, meta }) {\n        const className = `field ${meta.error && meta.touched ? 'error': ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input { ...input } autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    }\n\n    renderError({ error, touched })  {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    onSubmit(formValues) {\n        console.log(formValues);\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n    if (!formValues.title) {\n        errors.title = \"You must enter a title\";\n    }\n    if (!formValues.description) {\n        errors.description = \"You must enter a description\";\n    }\n    return errors;\n}\n\nexport default reduxForm({ form: 'streamCreate', validate })(StreamCreate);","import React from 'react';\n\nconst StreamEdit = () => {\n    return <div>StreamEdit</div>;\n}\n\nexport default StreamEdit;","import React from 'react';\n\nconst StreamDelete = () => {\n    return <div>StreamDelete</div>;\n}\n\nexport default StreamDelete;","import React from 'react';\n\nconst StreamList = () => {\n    return <div>StreamList</div>;\n}\n\nexport default StreamList;","import React from 'react';\n\nconst StreamShow = () => {\n    return <div>StreamShow</div>;\n}\n\nexport default StreamShow;","const types = {\n    SIGN_IN: 'SIGN_IN',\n    SIGN_OUT: 'SIGN_OUT'\n}\n\nexport default types;","import React, { Component } from 'react';\nimport { signIn, signOut } from '../actions'; \nimport { connect } from 'react-redux';\n\nclass GoogleAuth extends Component {\n    constructor(props){\n        super(props);\n        this.onAuthChange = this.onAuthChange.bind(this);\n        this.onSignInClick = this.onSignInClick.bind(this);\n        this.onSignOutClick = this.onSignOutClick.bind(this);\n    }\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: \"903529887690-q7hli1e1vfhurf9g82v7k2mc4eqk6iah.apps.googleusercontent.com\",\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"google-auth\">\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <button className=\"ui red google button\" onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    <span>Sign out</span>\n                </button>\n            );\n        } else {\n            return (\n                <button className=\"ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    <span>Sign in with Google</span>\n                </button>\n            );\n        }\n    }\n\n    onAuthChange(isSignedIn) {\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick() {\n        this.auth.signIn();\n    }\n\n    onSignOutClick() {\n        this.auth.signOut();\n    }\n}\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import types from './types';\n\nexport const signIn = userId => {\n    return {\n        type: types.SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: types.SIGN_OUT\n    }\n}","import React from 'react';\nimport './Header.css';\nimport logo from '../logo.svg';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n    return (\n        <header className=\"App-header menu\">\n            <Link to=\"/\" className=\"App-link\">\n                <figure>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <figcaption>Stremy</figcaption>\n                </figure>\n            </Link>\n            <Link to=\"/\" className=\"App-link\">\n                All Streams\n            </Link>\n            <GoogleAuth/>\n        </header>\n    );\n}\n\nexport default Header;","import types from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case types.SIGN_IN:\n            return { ...state, isSignedIn: true, userId: action.payload };\n        case types.SIGN_OUT:\n            return { ...state, isSignedIn: false, userId: null } ;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer\n});","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport StreamCreate from './components/streams/StreamCreate';\nimport StreamEdit from './components/streams/StreamEdit';\nimport StreamDelete from './components/streams/StreamDelete';\nimport StreamList from './components/streams/StreamList';\nimport StreamShow from './components/streams/StreamShow';\nimport Header from './components/Header';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()));\n\nfunction App() {\n  return (\n      <Provider store={store}>\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Header/>\n                    <div className=\"App-body\">\n                        <Route path=\"/\" exact component={StreamList}/>\n                        <Route path=\"/streams/new\" exact component={StreamCreate} />\n                        <Route path=\"/streams/edit\" exact component={StreamEdit} />\n                        <Route path=\"/streams/delete\" exact component={StreamDelete} />\n                        <Route path=\"/streams/show\" exac component={StreamShow} />\n                    </div>\n                </BrowserRouter>\n            </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}